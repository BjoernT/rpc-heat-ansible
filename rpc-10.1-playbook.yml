---
# This playbook installs Rackspace Private Cloud v10.1

- name: Install Rackspace Private Cloud v10.1
  hosts: all
  tasks:
    - name: Ping Nodes
      ping:
      tags:
        - setup

    - name: Create /etc/ansible/facts.d
      file: path=/etc/ansible/facts.d state=directory
      tags:
        - setup

    - name: Create Dummy Fact
      ini_file: dest=/etc/ansible/facts.d/dummy.fact section=dummy option=dummy value=dummy
      tags:
        - setup

    - name: Gather Facts
      setup:
      tags:
        - setup

    - name: Install Packages
      apt: name={{ item }} state=present
      with_items:
        - colordiff
        - fping
      tags:
        - setup

    - name: Add Nodes Hosts File Entries (Long)
      lineinfile: dest=/etc/hosts regexp='^{{ hostvars[item].ansible_eth2.ipv4.address }} {{ hostvars[item].node_name }}' line='{{ hostvars[item].ansible_eth2.ipv4.address }} {{ hostvars[item].node_name }}' insertafter=EOF state=present
      with_items: groups['all']
      tags:
        - setup

    - name: Add Nodes Hosts File Entries (Short)
      lineinfile: dest=/etc/hosts regexp='^{{ hostvars[item].ansible_eth2.ipv4.address }} {{ item }}' line='{{ hostvars[item].ansible_eth2.ipv4.address }} {{ item }}' insertafter=EOF state=present
      with_items: groups['all']
      tags:
        - setup

    - name: Add Nodes Hosts File Entries (Node)
      lineinfile: dest=/etc/hosts regexp='^{{ hostvars[item].ansible_eth2.ipv4.address }} {{ "n%02d"|format(hostvars[item].node_id) }}' line='{{ hostvars[item].ansible_eth2.ipv4.address }} {{ "n%02d"|format(hostvars[item].node_id) }}' insertafter=EOF state=present
      with_items: groups['all']
      tags:
        - setup

    - name: Set Environment Variables and Force Color Prompt
      lineinfile: dest=/root/.bashrc regexp='{{ item.regexp }}' line='{{ item.line }}' insertafter=EOF state=present
      with_items:
        - { regexp: '^(#)?force_color_prompt',      line: 'force_color_prompt=yes' }
        - { regexp: '^export MY_HEAT_STACK_PREFIX', line: 'export MY_HEAT_STACK_PREFIX={{ heat_stack_prefix }}' }
        - { regexp: '^export MY_NODE_ID',           line: 'export MY_NODE_ID={{ node_id }}' }
        - { regexp: '^export MY_IP',                line: 'export MY_IP={{ hostvars[inventory_hostname].ansible_eth2.ipv4.address }}' }
        - { regexp: '^export MY_PRIVATE_IP',        line: 'export MY_PRIVATE_IP={{ hostvars[inventory_hostname].ansible_eth2.ipv4.address }}' }
        - { regexp: '^export MY_PUBLIC_IP',         line: 'export MY_PUBLIC_IP={{ hostvars[inventory_hostname].ansible_eth0.ipv4.address }}' }
      tags:
        - setup

    - name: Check Connectivity
      command: fping infra1 infra2 infra3 logger1 compute1 compute2 block1 object1
      changed_when: False
      tags:
        - setup

    - name: Create Swap File
      command: dd if=/dev/zero of=/mnt/4GB.swap bs=1024 count=4194304 creates=/mnt/4GB.swap
      register: create_swap_file
      tags:
        - setup

    - debug: var=create_swap_file
      tags:
        - setup

    - name: Format Swap File
      command: mkswap /mnt/4GB.swap
      when: create_swap_file.skipped == false
      register: format_swap_file
      tags:
        - setup

    - debug: var=format_swap_file
      tags:
        - setup

    - name: Enable Swap File
      command: swapon /mnt/4GB.swap
      when: format_swap_file.skipped == false
      tags:
        - setup

    - name: Add Swap To /etc/fstab
      lineinfile: dest=/etc/fstab regexp='/mnt/4GB.swap  none  swap  sw 0  0' line='/mnt/4GB.swap  none  swap  sw 0  0' insertafter=EOF
      tags:
        - setup

    - name: Set Swappiness
      sysctl: name=vm.swappiness value=90 state=present
      tags:
        - setup

    - name: Create Primary Partitions
      shell: |
        export PARTITION_START=`parted {{ item.device }} print free | awk '/Free Space/ { print $1 }' | tail -n 1 | sed 's/GB//'`
        export PARTITION_END=`awk "BEGIN { print $PARTITION_START + {{ item.size }} }"`
        parted {{ item.device }} mkpart primary ${PARTITION_START}GB ${PARTITION_END}GB
        partprobe {{ item.device }}
      when: node_name in item.nodes and ansible_local.partitions is not defined
      with_items:
        - nodes: [ infra1, infra2, infra3 ]
          device: /dev/xvda
          size: 130
        - nodes: [ logger1 ]
          device: /dev/xvda
          size: 30
        - nodes: [ compute1, compute2 ]
          device: /dev/xvda
          size: 15
        - nodes: [ block1 ]
          device: /dev/xvda
          size: 20
        - nodes: [ block1 ]
          device: /dev/xvda
          size: 100
        - nodes: [ object1 ]
          device: /dev/xvda
          size: 15
      tags:
        - setup

    - name: Create Extended Partitions (Extended Partition Will Consume All Free Space)
      shell: |
        export PARTITION_START=`parted {{ item.device }} print free | awk '/Free Space/ { print $1 }' | tail -n 1 | sed 's/GB//'`
        export PARTITION_END=`parted {{ item.device }} print free | awk '/Free Space/ { print $2 }' | tail -n 1 | sed 's/GB//'`
        parted {{ item.device }} mkpart extended ${PARTITION_START}GB ${PARTITION_END}GB
        partprobe {{ item.device }}
      when: node_name in item.nodes and ansible_local.partitions is not defined
      with_items:
        - nodes: [ object1 ]
          device: /dev/xvda
      tags:
        - setup

    - name: Create Logical Partitions
      shell: |
        export PARTITION_START=`parted {{ item.device }} print free | awk '/Free Space/ { print $1 }' | tail -n 1 | sed 's/GB//'`
        export PARTITION_END=`awk "BEGIN { print $PARTITION_START + {{ item.size }} }"`
        parted {{ item.device }} mkpart logical ${PARTITION_START}GB ${PARTITION_END}GB
        partprobe {{ item.device }}
      when: node_name in item.nodes and ansible_local.partitions is not defined
      with_items:
        - nodes: [ object1 ]
          device: /dev/xvda
          size: 20
        - nodes: [ object1 ]
          device: /dev/xvda
          size: 20
        - nodes: [ object1 ]
          device: /dev/xvda
          size: 20
        - nodes: [ object1 ]
          device: /dev/xvda
          size: 20
        - nodes: [ object1 ]
          device: /dev/xvda
          size: 20
      tags:
        - setup

    - name: Create Partitions Done Fact
      ini_file: dest=/etc/ansible/facts.d/partitions.fact section=state option=created value=true
      tags:
        - setup
