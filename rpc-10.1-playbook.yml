---
# This playbook installs Rackspace Private Cloud v10.1

- name: Install Rackspace Private Cloud v10.1
  hosts: all
  tasks:
    - name: Ping Nodes
      ping:

    - name: Install Packages
      apt: name={{ item }} state=present
      with_items:
        - colordiff
        - fping

    - name: Add Nodes Hosts File Entries (Long)
      lineinfile: dest=/etc/hosts regexp='^{{ hostvars[item].ansible_eth2.ipv4.address }} {{ hostvars[item].node_name }}' line='{{ hostvars[item].ansible_eth2.ipv4.address }} {{ hostvars[item].node_name }}' insertafter=EOF state=present
      with_items: groups['all']

    - name: Add Nodes Hosts File Entries (Short)
      lineinfile: dest=/etc/hosts regexp='^{{ hostvars[item].ansible_eth2.ipv4.address }} {{ item }}' line='{{ hostvars[item].ansible_eth2.ipv4.address }} {{ item }}' insertafter=EOF state=present
      with_items: groups['all']

    - name: Add Nodes Hosts File Entries (Node)
      lineinfile: dest=/etc/hosts regexp='^{{ hostvars[item].ansible_eth2.ipv4.address }} {{ "n%02d"|format(hostvars[item].node_id) }}' line='{{ hostvars[item].ansible_eth2.ipv4.address }} {{ "n%02d"|format(hostvars[item].node_id) }}' insertafter=EOF state=present
      with_items: groups['all']

    - name: Set Environment Variables and Force Color Prompt
      lineinfile: dest=/root/.bashrc regexp='{{ item.regexp }}' line='{{ item.line }}' insertafter=EOF state=present
      with_items:
        - { regexp: '^(#)?force_color_prompt',      line: 'force_color_prompt=yes' }
        - { regexp: '^export MY_HEAT_STACK_PREFIX', line: 'export MY_HEAT_STACK_PREFIX={{ heat_stack_prefix }}' }
        - { regexp: '^export MY_NODE_ID',           line: 'export MY_NODE_ID={{ node_id }}' }
        - { regexp: '^export MY_IP',                line: 'export MY_IP={{ hostvars[inventory_hostname].ansible_eth2.ipv4.address }}' }
        - { regexp: '^export MY_PRIVATE_IP',        line: 'export MY_PRIVATE_IP={{ hostvars[inventory_hostname].ansible_eth2.ipv4.address }}' }
        - { regexp: '^export MY_PUBLIC_IP',         line: 'export MY_PUBLIC_IP={{ hostvars[inventory_hostname].ansible_eth0.ipv4.address }}' }

    - name: Check Connectivity
      command: fping infra1 infra2 infra3 logger1 compute1 compute2 block1 object1
      changed_when: False

    - name: Create /etc/ansible/facts.d
      file: path=/etc/ansible/facts.d state=directory

    - name: Create Partitions
      shell: |
        export PARTITION_START=`parted {{ item.device }} print free | awk '/Free Space/ { print $1 }' | tail -n 1 | sed 's/GB//'`
        export PARTITION_END=`awk "BEGIN { print $PARTITION_START + {{ item.size }} }"`
        parted {{ item.device }} mkpart {{ item.type }} ${PARTITION_START}GB ${PARTITION_END}GB
        partprobe {{ item.device }}
      when: ( node_name in item.nodes and ( ansible_local.partitions is not defined or ( ansible_local.partitions is defined and ansible_local.partitions.created is defined and ansible_local.partitions.created is not true ) ) )
      with_items:
        - device: /dev/xvda
          type: primary
          size: 110
          nodes: [ infra1, infra2, infra3 ]
        - device: /dev/xvda
          type: primary
          size: 20
          nodes: [ logger1, compute1, compute2, block1, object1 ]

    - name: Create Partitions Done Fact
      copy: dest=/etc/ansible/facts.d/partitions.fact content="[partitions]\ncreated=true"
