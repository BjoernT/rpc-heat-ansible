From 3208b2a129951f94ca0208da0e5b2ff17981ba86 Mon Sep 17 00:00:00 2001
From: Kevin Carter <kevin.carter@rackspace.com>
Date: Mon, 21 Dec 2015 12:27:49 -0600
Subject: [PATCH] Ensure that a stable, known pip version is used

This patch updates the primary and secondary locations for
downloading the get-pip.py script and also sets the
installation process to ensure that a known, stable major
version of pip is installed.

This is a combined backport of:
 - https://review.openstack.org/260147
 - https://review.openstack.org/270153
 - https://review.openstack.org/270167
 - https://review.openstack.org/270452

Note:
The pip URL variables have been changed from the master
commit in order to maintain compatibility with any
deployers who may have used the current variables to
override the URL.

Change-Id: If406a2321d987619de434ec0b0093f1902c5cdae
(cherry picked from commit 42a1678695c159d3cfa523b920c81f805135bcee)
Signed-off-by: Kevin Carter <kevin.carter@rackspace.com>
---

diff --git a/global-requirement-pins.txt b/global-requirement-pins.txt
new file mode 100644
index 0000000..ca73bd2
--- /dev/null
+++ b/global-requirement-pins.txt
@@ -0,0 +1,3 @@
+# This file was created to set pins that are needed but should not be
+#  installed as base requirements
+pip>7,<8
diff --git a/playbooks/plugins/lookups/py_pkgs.py b/playbooks/plugins/lookups/py_pkgs.py
index ac1ffb6..2ad3d30 100644
--- a/playbooks/plugins/lookups/py_pkgs.py
+++ b/playbooks/plugins/lookups/py_pkgs.py
@@ -29,7 +29,8 @@
     'requirements.txt',
     'global-requirements.txt',
     'test-requirements.txt',
-    'dev-requirements.txt'
+    'dev-requirements.txt',
+    'global-requirement-pins.txt'
 ]
 
 
diff --git a/playbooks/roles/pip_install/defaults/main.yml b/playbooks/roles/pip_install/defaults/main.yml
index ca6e1a2..c69e56f 100644
--- a/playbooks/roles/pip_install/defaults/main.yml
+++ b/playbooks/roles/pip_install/defaults/main.yml
@@ -16,8 +16,14 @@
 ## Path to pip download/installation script.
 pip_upstream_repo_url: https://bootstrap.pypa.io
 pip_get_pip_url: "{{ pip_upstream_repo_url }}/get-pip.py"
-pip_get_pip_fallback_url: https://raw.github.com/pypa/pip/master/contrib/get-pip.py
+pip_get_pip_fallback_url: https://raw.githubusercontent.com/pypa/get-pip/master/get-pip.py
+pip_version: "7.1.2"
 
 # Additional options that you might want to pass to "get-pip.py" when installing pip.
 # Default `pip_get_pip_options` is an empty string.
 pip_get_pip_options: ""
+
+# This is to ensure that the repo has the right pip package version,
+# and even if a version is pulled from the internet, it's also the right version.
+pip_packages:
+ - "pip>7,<8"
diff --git a/playbooks/roles/pip_install/tasks/main.yml b/playbooks/roles/pip_install/tasks/main.yml
index 2b43a36..4344d34 100644
--- a/playbooks/roles/pip_install/tasks/main.yml
+++ b/playbooks/roles/pip_install/tasks/main.yml
@@ -69,8 +69,8 @@
     - pip-install
 
 - name: Install PIP
-  shell: "python /opt/get-pip.py {{ pip_get_pip_options }}"
-  changed_when: false
+  shell: "python /opt/get-pip.py {{ pip_get_pip_options }} '{{ pip_packages[0] }}'"
+  ignore_errors: true
   register: pip_install
   until: pip_install | success
   retries: 3
@@ -79,7 +79,7 @@
     - pip-install
 
 - name: Install PIP (fall back mode)
-  shell: "python /opt/get-pip.py --isolated"
+  shell: "python /opt/get-pip.py --isolated '{{ pip_packages[0] }}'"
   when: pip_install.rc != 0
   register: pip_install_fall_back
   until: pip_install_fall_back | success
diff --git a/scripts/scripts-library.sh b/scripts/scripts-library.sh
index 2a3a5ff..d86add6 100755
--- a/scripts/scripts-library.sh
+++ b/scripts/scripts-library.sh
@@ -21,6 +21,7 @@
 REPORT_DATA=${REPORT_DATA:-""}
 ANSIBLE_PARAMETERS=${ANSIBLE_PARAMETERS:-""}
 STARTTIME="${STARTTIME:-$(date +%s)}"
+PIP_MAJOR_VERSION=${PIP_MAJOR_VERSION:-"7"}
 
 # The default SSHD configuration has MaxSessions = 10. If a deployer changes
 #  their SSHD config, then the FORKS may be set to a higher number. We set the
@@ -211,14 +212,23 @@
 }
 
 function get_pip {
-  # if pip is already installed, don't bother doing anything
-  if [ ! "$(which pip)" ]; then
+
+  # check if pip is already installed
+  if [ "$(which pip)" ]; then
+
+    # if the version installed is the wrong version, fix it
+    if [ "$(pip --version | awk '{print $2}' | cut -d. -f1)" != ${PIP_MAJOR_VERSION} ]; then
+      pip install -I "pip>=${PIP_MAJOR_VERSION},<$((PIP_MAJOR_VERSION+1))"
+    fi
+
+  # when pip is not installed, install it
+  else
 
     # If GET_PIP_URL is set, then just use it
     if [ -n "${GET_PIP_URL:-}" ]; then
       curl --silent ${GET_PIP_URL} > /opt/get-pip.py
       if head -n 1 /opt/get-pip.py | grep python; then
-        python2 /opt/get-pip.py || python /opt/get-pip.py
+        python /opt/get-pip.py "pip>=${PIP_MAJOR_VERSION},<$((PIP_MAJOR_VERSION+1))"
         return
       fi
     fi
@@ -226,14 +236,14 @@
     # Try getting pip from bootstrap.pypa.io as a primary source
     curl --silent https://bootstrap.pypa.io/get-pip.py > /opt/get-pip.py
     if head -n 1 /opt/get-pip.py | grep python; then
-      python2 /opt/get-pip.py || python /opt/get-pip.py
+      python /opt/get-pip.py "pip>=${PIP_MAJOR_VERSION},<$((PIP_MAJOR_VERSION+1))"
       return
     fi
 
-    # Try the get-pip.py from the github repository as a secondary source
-    curl --silent https://raw.github.com/pypa/pip/master/contrib/get-pip.py > /opt/get-pip.py
+    # Try the get-pip.py from the github repository as a primary source
+    curl --silent https://raw.githubusercontent.com/pypa/get-pip/master/get-pip.py > /opt/get-pip.py
     if head -n 1 /opt/get-pip.py | grep python; then
-      python2 /opt/get-pip.py || python /opt/get-pip.py
+      python /opt/get-pip.py "pip>=${PIP_MAJOR_VERSION},<$((PIP_MAJOR_VERSION+1))"
       return
     fi
 
